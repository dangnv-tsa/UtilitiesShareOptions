<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="2.0" toolsVersion="2840" systemVersion="11G56" targetRuntime="iOS.CocoaTouch.iPad" propertyAccessControl="none" initialViewController="2">
    <dependencies>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="1926"/>
    </dependencies>
    <scenes>
        <!--Root View Controller-->
        <scene sceneID="4">
            <objects>
                <viewController storyboardIdentifier="RootViewController" useStoryboardIdentifierAsRestorationIdentifier="YES" id="2" customClass="RootViewController" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="5">
                        <rect key="frame" x="0.0" y="20" width="768" height="1004"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" lineBreakMode="tailTruncation" numberOfLines="7" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" id="Kvr-YQ-y0V">
                                <rect key="frame" x="20" y="87" width="728" height="155"/>
                                <string key="text">View - Main (black background) must animate like shown in video when Start-button is pressed. The tiles must be made so it is possible to fade betweeen 4 different contents (pictures) from backend. It must be able to tap and hold a tile and move it to another position. The new position must be saved locally on the device. When the user tap a tile it will open a Flipboard-like function in the Main View, which will have content that we are able to change. Main View will disappear when the user tap outside the View.</string>
                                <fontDescription key="fontDescription" type="system" pointSize="17"/>
                                <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                                <nil key="highlightedColor"/>
                            </label>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" id="swI-9y-CWY">
                                <rect key="frame" x="90" y="36" width="143" height="44"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="15"/>
                                <state key="normal" title="Start-button">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                            </button>
                            <view contentMode="scaleToFill" id="KsY-Ze-3se">
                                <rect key="frame" x="20" y="243" width="728" height="689"/>
                                <autoresizingMask key="autoresizingMask"/>
                                <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                            </view>
                        </subviews>
                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="calibratedWhite"/>
                    </view>
                    <connections>
                        <outlet property="btnStart" destination="swI-9y-CWY" id="AKy-d8-QTL"/>
                        <outlet property="headerView" destination="5" id="QCX-WY-CEe"/>
                        <outlet property="introductions" destination="Kvr-YQ-y0V" id="m73-Ag-lYg"/>
                        <outlet property="launcherViewContainer" destination="KsY-Ze-3se" id="YD8-B1-zGt"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="3" sceneMemberID="firstResponder"/>
            </objects>
        </scene>
    </scenes>
    <classes>
        <class className="LauncherViewController" superclassName="UIViewController">
            <source key="sourceIdentifier" type="project" relativePath="./Classes/LauncherViewController.h"/>
        </class>
        <class className="RootViewController" superclassName="LauncherViewController">
            <source key="sourceIdentifier" type="project" relativePath="./Classes/RootViewController.h"/>
            <relationships>
                <relationship kind="outlet" name="btnStart" candidateClass="UIButton"/>
                <relationship kind="outlet" name="headerView" candidateClass="UIView"/>
                <relationship kind="outlet" name="introductions" candidateClass="UILabel"/>
                <relationship kind="outlet" name="launcherViewContainer" candidateClass="UIView"/>
            </relationships>
        </class>
    </classes>
    <simulatedMetricsContainer key="defaultSimulatedMetrics">
        <simulatedStatusBarMetrics key="statusBar" statusBarStyle="blackTranslucent"/>
        <simulatedOrientationMetrics key="orientation"/>
        <simulatedScreenMetrics key="destination"/>
    </simulatedMetricsContainer>
</document>